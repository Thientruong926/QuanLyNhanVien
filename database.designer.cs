#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyNhanVien
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLNHANVIEN")]
	public partial class databaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDEAN(DEAN instance);
    partial void UpdateDEAN(DEAN instance);
    partial void DeleteDEAN(DEAN instance);
    partial void InsertNGUOIDUNG(NGUOIDUNG instance);
    partial void UpdateNGUOIDUNG(NGUOIDUNG instance);
    partial void DeleteNGUOIDUNG(NGUOIDUNG instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertPHANCONG(PHANCONG instance);
    partial void UpdatePHANCONG(PHANCONG instance);
    partial void DeletePHANCONG(PHANCONG instance);
    partial void InsertPHONGBAN(PHONGBAN instance);
    partial void UpdatePHONGBAN(PHONGBAN instance);
    partial void DeletePHONGBAN(PHONGBAN instance);
    #endregion
		
		public databaseDataContext() : 
				base(global::QuanLyNhanVien.Properties.Settings.Default.QLNHANVIENConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DEAN> DEANs
		{
			get
			{
				return this.GetTable<DEAN>();
			}
		}
		
		public System.Data.Linq.Table<NGUOIDUNG> NGUOIDUNGs
		{
			get
			{
				return this.GetTable<NGUOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHANCONG> PHANCONGs
		{
			get
			{
				return this.GetTable<PHANCONG>();
			}
		}
		
		public System.Data.Linq.Table<PHONGBAN> PHONGBANs
		{
			get
			{
				return this.GetTable<PHONGBAN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEAN")]
	public partial class DEAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDeAn;
		
		private string _TenDeAn;
		
		private string _MaPhong;
		
		private System.Nullable<System.DateTime> _Ng_BatDauDeAn;
		
		private System.Nullable<System.DateTime> _Ng_KetThucDean;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
		private EntityRef<PHONGBAN> _PHONGBAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDeAnChanging(string value);
    partial void OnMaDeAnChanged();
    partial void OnTenDeAnChanging(string value);
    partial void OnTenDeAnChanged();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnNg_BatDauDeAnChanging(System.Nullable<System.DateTime> value);
    partial void OnNg_BatDauDeAnChanged();
    partial void OnNg_KetThucDeanChanging(System.Nullable<System.DateTime> value);
    partial void OnNg_KetThucDeanChanged();
    #endregion
		
		public DEAN()
		{
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			this._PHONGBAN = default(EntityRef<PHONGBAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDeAn", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDeAn
		{
			get
			{
				return this._MaDeAn;
			}
			set
			{
				if ((this._MaDeAn != value))
				{
					this.OnMaDeAnChanging(value);
					this.SendPropertyChanging();
					this._MaDeAn = value;
					this.SendPropertyChanged("MaDeAn");
					this.OnMaDeAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDeAn", DbType="NVarChar(50)")]
		public string TenDeAn
		{
			get
			{
				return this._TenDeAn;
			}
			set
			{
				if ((this._TenDeAn != value))
				{
					this.OnTenDeAnChanging(value);
					this.SendPropertyChanging();
					this._TenDeAn = value;
					this.SendPropertyChanged("TenDeAn");
					this.OnTenDeAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="VarChar(4)")]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._PHONGBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ng_BatDauDeAn", DbType="Date")]
		public System.Nullable<System.DateTime> Ng_BatDauDeAn
		{
			get
			{
				return this._Ng_BatDauDeAn;
			}
			set
			{
				if ((this._Ng_BatDauDeAn != value))
				{
					this.OnNg_BatDauDeAnChanging(value);
					this.SendPropertyChanging();
					this._Ng_BatDauDeAn = value;
					this.SendPropertyChanged("Ng_BatDauDeAn");
					this.OnNg_BatDauDeAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ng_KetThucDean", DbType="Date")]
		public System.Nullable<System.DateTime> Ng_KetThucDean
		{
			get
			{
				return this._Ng_KetThucDean;
			}
			set
			{
				if ((this._Ng_KetThucDean != value))
				{
					this.OnNg_KetThucDeanChanging(value);
					this.SendPropertyChanging();
					this._Ng_KetThucDean = value;
					this.SendPropertyChanged("Ng_KetThucDean");
					this.OnNg_KetThucDeanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEAN_PHANCONG", Storage="_PHANCONGs", ThisKey="MaDeAn", OtherKey="MaDeAn")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGBAN_DEAN", Storage="_PHONGBAN", ThisKey="MaPhong", OtherKey="MaPhg", IsForeignKey=true)]
		public PHONGBAN PHONGBAN
		{
			get
			{
				return this._PHONGBAN.Entity;
			}
			set
			{
				PHONGBAN previousValue = this._PHONGBAN.Entity;
				if (((previousValue != value) 
							|| (this._PHONGBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGBAN.Entity = null;
						previousValue.DEANs.Remove(this);
					}
					this._PHONGBAN.Entity = value;
					if ((value != null))
					{
						value.DEANs.Add(this);
						this._MaPhong = value.MaPhg;
					}
					else
					{
						this._MaPhong = default(string);
					}
					this.SendPropertyChanged("PHONGBAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.DEAN = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.DEAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NGUOIDUNG")]
	public partial class NGUOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Username;
		
		private string _Password;
		
		private string _Email;
		
		private string _OTP;
		
		private System.Nullable<System.DateTime> _OTPDateSend;
		
		private System.Nullable<System.DateTime> _OTPCreated;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _DateActive;
		
		private System.Nullable<int> _LeaveID;
		
		private string _RandomKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnOTPChanging(string value);
    partial void OnOTPChanged();
    partial void OnOTPDateSendChanging(System.Nullable<System.DateTime> value);
    partial void OnOTPDateSendChanged();
    partial void OnOTPCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnOTPCreatedChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnDateActiveChanging(System.Nullable<System.DateTime> value);
    partial void OnDateActiveChanged();
    partial void OnLeaveIDChanging(System.Nullable<int> value);
    partial void OnLeaveIDChanged();
    partial void OnRandomKeyChanging(string value);
    partial void OnRandomKeyChanged();
    #endregion
		
		public NGUOIDUNG()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(MAX)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTP", DbType="VarChar(50)")]
		public string OTP
		{
			get
			{
				return this._OTP;
			}
			set
			{
				if ((this._OTP != value))
				{
					this.OnOTPChanging(value);
					this.SendPropertyChanging();
					this._OTP = value;
					this.SendPropertyChanged("OTP");
					this.OnOTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTPDateSend", DbType="DateTime")]
		public System.Nullable<System.DateTime> OTPDateSend
		{
			get
			{
				return this._OTPDateSend;
			}
			set
			{
				if ((this._OTPDateSend != value))
				{
					this.OnOTPDateSendChanging(value);
					this.SendPropertyChanging();
					this._OTPDateSend = value;
					this.SendPropertyChanged("OTPDateSend");
					this.OnOTPDateSendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTPCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> OTPCreated
		{
			get
			{
				return this._OTPCreated;
			}
			set
			{
				if ((this._OTPCreated != value))
				{
					this.OnOTPCreatedChanging(value);
					this.SendPropertyChanging();
					this._OTPCreated = value;
					this.SendPropertyChanged("OTPCreated");
					this.OnOTPCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateActive", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateActive
		{
			get
			{
				return this._DateActive;
			}
			set
			{
				if ((this._DateActive != value))
				{
					this.OnDateActiveChanging(value);
					this.SendPropertyChanging();
					this._DateActive = value;
					this.SendPropertyChanged("DateActive");
					this.OnDateActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveID", DbType="Int")]
		public System.Nullable<int> LeaveID
		{
			get
			{
				return this._LeaveID;
			}
			set
			{
				if ((this._LeaveID != value))
				{
					this.OnLeaveIDChanging(value);
					this.SendPropertyChanging();
					this._LeaveID = value;
					this.SendPropertyChanged("LeaveID");
					this.OnLeaveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RandomKey", DbType="VarChar(50)")]
		public string RandomKey
		{
			get
			{
				return this._RandomKey;
			}
			set
			{
				if ((this._RandomKey != value))
				{
					this.OnRandomKeyChanging(value);
					this.SendPropertyChanging();
					this._RandomKey = value;
					this.SendPropertyChanged("RandomKey");
					this.OnRandomKeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _HoTenNV;
		
		private System.Nullable<System.DateTime> _NgSinh;
		
		private string _GioiTinh;
		
		private string _dchi;
		
		private string _MaTrgPhong;
		
		private string _MaPhong;
		
		private System.Nullable<int> _MucLuong;
		
		private EntitySet<PHANCONG> _PHANCONGs;
		
		private EntityRef<PHONGBAN> _PHONGBAN;
		
		private EntityRef<PHONGBAN> _PHONGBAN1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnHoTenNVChanging(string value);
    partial void OnHoTenNVChanged();
    partial void OnNgSinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgSinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OndchiChanging(string value);
    partial void OndchiChanged();
    partial void OnMaTrgPhongChanging(string value);
    partial void OnMaTrgPhongChanged();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnMucLuongChanging(System.Nullable<int> value);
    partial void OnMucLuongChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._PHANCONGs = new EntitySet<PHANCONG>(new Action<PHANCONG>(this.attach_PHANCONGs), new Action<PHANCONG>(this.detach_PHANCONGs));
			this._PHONGBAN = default(EntityRef<PHONGBAN>);
			this._PHONGBAN1 = default(EntityRef<PHONGBAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenNV", DbType="NVarChar(100)")]
		public string HoTenNV
		{
			get
			{
				return this._HoTenNV;
			}
			set
			{
				if ((this._HoTenNV != value))
				{
					this.OnHoTenNVChanging(value);
					this.SendPropertyChanging();
					this._HoTenNV = value;
					this.SendPropertyChanged("HoTenNV");
					this.OnHoTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgSinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgSinh
		{
			get
			{
				return this._NgSinh;
			}
			set
			{
				if ((this._NgSinh != value))
				{
					this.OnNgSinhChanging(value);
					this.SendPropertyChanging();
					this._NgSinh = value;
					this.SendPropertyChanged("NgSinh");
					this.OnNgSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="VarChar(5)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dchi", DbType="NVarChar(100)")]
		public string dchi
		{
			get
			{
				return this._dchi;
			}
			set
			{
				if ((this._dchi != value))
				{
					this.OndchiChanging(value);
					this.SendPropertyChanging();
					this._dchi = value;
					this.SendPropertyChanged("dchi");
					this.OndchiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTrgPhong", DbType="VarChar(8)")]
		public string MaTrgPhong
		{
			get
			{
				return this._MaTrgPhong;
			}
			set
			{
				if ((this._MaTrgPhong != value))
				{
					if (this._PHONGBAN1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTrgPhongChanging(value);
					this.SendPropertyChanging();
					this._MaTrgPhong = value;
					this.SendPropertyChanged("MaTrgPhong");
					this.OnMaTrgPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="VarChar(4)")]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._PHONGBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MucLuong", DbType="Int")]
		public System.Nullable<int> MucLuong
		{
			get
			{
				return this._MucLuong;
			}
			set
			{
				if ((this._MucLuong != value))
				{
					this.OnMucLuongChanging(value);
					this.SendPropertyChanging();
					this._MucLuong = value;
					this.SendPropertyChanged("MucLuong");
					this.OnMucLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHANCONG", Storage="_PHANCONGs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PHANCONG> PHANCONGs
		{
			get
			{
				return this._PHANCONGs;
			}
			set
			{
				this._PHANCONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGBAN_NHANVIEN", Storage="_PHONGBAN", ThisKey="MaPhong", OtherKey="MaPhg", IsForeignKey=true)]
		public PHONGBAN PHONGBAN
		{
			get
			{
				return this._PHONGBAN.Entity;
			}
			set
			{
				PHONGBAN previousValue = this._PHONGBAN.Entity;
				if (((previousValue != value) 
							|| (this._PHONGBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGBAN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._PHONGBAN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._MaPhong = value.MaPhg;
					}
					else
					{
						this._MaPhong = default(string);
					}
					this.SendPropertyChanged("PHONGBAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGBAN_NHANVIEN1", Storage="_PHONGBAN1", ThisKey="MaTrgPhong", OtherKey="MaTrgPhong", IsForeignKey=true)]
		public PHONGBAN PHONGBAN1
		{
			get
			{
				return this._PHONGBAN1.Entity;
			}
			set
			{
				PHONGBAN previousValue = this._PHONGBAN1.Entity;
				if (((previousValue != value) 
							|| (this._PHONGBAN1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONGBAN1.Entity = null;
						previousValue.NHANVIENs1.Remove(this);
					}
					this._PHONGBAN1.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs1.Add(this);
						this._MaTrgPhong = value.MaTrgPhong;
					}
					else
					{
						this._MaTrgPhong = default(string);
					}
					this.SendPropertyChanged("PHONGBAN1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHANCONGs(PHANCONG entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANCONG")]
	public partial class PHANCONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _MaDeAn;
		
		private EntityRef<DEAN> _DEAN;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMaDeAnChanging(string value);
    partial void OnMaDeAnChanged();
    #endregion
		
		public PHANCONG()
		{
			this._DEAN = default(EntityRef<DEAN>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDeAn", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDeAn
		{
			get
			{
				return this._MaDeAn;
			}
			set
			{
				if ((this._MaDeAn != value))
				{
					if (this._DEAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDeAnChanging(value);
					this.SendPropertyChanging();
					this._MaDeAn = value;
					this.SendPropertyChanged("MaDeAn");
					this.OnMaDeAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DEAN_PHANCONG", Storage="_DEAN", ThisKey="MaDeAn", OtherKey="MaDeAn", IsForeignKey=true)]
		public DEAN DEAN
		{
			get
			{
				return this._DEAN.Entity;
			}
			set
			{
				DEAN previousValue = this._DEAN.Entity;
				if (((previousValue != value) 
							|| (this._DEAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DEAN.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._DEAN.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MaDeAn = value.MaDeAn;
					}
					else
					{
						this._MaDeAn = default(string);
					}
					this.SendPropertyChanged("DEAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHANCONG", Storage="_NHANVIEN", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHANCONGs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHANCONGs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONGBAN")]
	public partial class PHONGBAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhg;
		
		private string _MaTrgPhong;
		
		private string _TenPhg;
		
		private string _TenTrgPhong;
		
		private EntitySet<DEAN> _DEANs;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntitySet<NHANVIEN> _NHANVIENs1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhgChanging(string value);
    partial void OnMaPhgChanged();
    partial void OnMaTrgPhongChanging(string value);
    partial void OnMaTrgPhongChanged();
    partial void OnTenPhgChanging(string value);
    partial void OnTenPhgChanged();
    partial void OnTenTrgPhongChanging(string value);
    partial void OnTenTrgPhongChanged();
    #endregion
		
		public PHONGBAN()
		{
			this._DEANs = new EntitySet<DEAN>(new Action<DEAN>(this.attach_DEANs), new Action<DEAN>(this.detach_DEANs));
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._NHANVIENs1 = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs1), new Action<NHANVIEN>(this.detach_NHANVIENs1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhg", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhg
		{
			get
			{
				return this._MaPhg;
			}
			set
			{
				if ((this._MaPhg != value))
				{
					this.OnMaPhgChanging(value);
					this.SendPropertyChanging();
					this._MaPhg = value;
					this.SendPropertyChanged("MaPhg");
					this.OnMaPhgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTrgPhong", DbType="VarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTrgPhong
		{
			get
			{
				return this._MaTrgPhong;
			}
			set
			{
				if ((this._MaTrgPhong != value))
				{
					this.OnMaTrgPhongChanging(value);
					this.SendPropertyChanging();
					this._MaTrgPhong = value;
					this.SendPropertyChanged("MaTrgPhong");
					this.OnMaTrgPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhg", DbType="NVarChar(100)")]
		public string TenPhg
		{
			get
			{
				return this._TenPhg;
			}
			set
			{
				if ((this._TenPhg != value))
				{
					this.OnTenPhgChanging(value);
					this.SendPropertyChanging();
					this._TenPhg = value;
					this.SendPropertyChanged("TenPhg");
					this.OnTenPhgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTrgPhong", DbType="NVarChar(100)")]
		public string TenTrgPhong
		{
			get
			{
				return this._TenTrgPhong;
			}
			set
			{
				if ((this._TenTrgPhong != value))
				{
					this.OnTenTrgPhongChanging(value);
					this.SendPropertyChanging();
					this._TenTrgPhong = value;
					this.SendPropertyChanged("TenTrgPhong");
					this.OnTenTrgPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGBAN_DEAN", Storage="_DEANs", ThisKey="MaPhg", OtherKey="MaPhong")]
		public EntitySet<DEAN> DEANs
		{
			get
			{
				return this._DEANs;
			}
			set
			{
				this._DEANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGBAN_NHANVIEN", Storage="_NHANVIENs", ThisKey="MaPhg", OtherKey="MaPhong")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONGBAN_NHANVIEN1", Storage="_NHANVIENs1", ThisKey="MaTrgPhong", OtherKey="MaTrgPhong")]
		public EntitySet<NHANVIEN> NHANVIENs1
		{
			get
			{
				return this._NHANVIENs1;
			}
			set
			{
				this._NHANVIENs1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DEANs(DEAN entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = this;
		}
		
		private void detach_DEANs(DEAN entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = null;
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN = null;
		}
		
		private void attach_NHANVIENs1(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN1 = this;
		}
		
		private void detach_NHANVIENs1(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.PHONGBAN1 = null;
		}
	}
}
#pragma warning restore 1591
